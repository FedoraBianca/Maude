fth TRIV## is
  including TRIV .
  op #_ : Elt -> Elt .
  op _##_ : Elt Elt -> Elt .
endfth
  
fmod LIST##{ X :: TRIV##} is
  sort List{X} .
  subsort X$Elt < List{X} .
  op nil : -> List{X} .
  op _ _ : List{X} List{X} -> List{X} [assoc id: nil] .
  op apply# : List{X} -> List{X} .
  op apply## : List{X} -> List{X} .
  var I J : X$Elt .
  var L : List{X} .
  eq apply#(nil) = nil .
  eq apply#(I L) = (# I) apply#(L) .
  eq apply##(nil) = nil .
  eq apply##(I) = I .
  eq apply##(I J L) = apply##((I ## J) L) .
endfm
  
view Triv##ToFloat from TRIV## to FLOAT is
  sort Elt to Float .
  op #_ to -_ .
  op _##_ to _/_ .
endv
  
fmod ListofFloats is
  protecting LIST##{Triv##ToFloat} .
endfm
  
red apply##(12.0 3.0 4.0) .
